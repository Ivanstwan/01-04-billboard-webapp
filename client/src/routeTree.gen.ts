/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ListingImport } from './routes/listing'
import { Route as AboutImport } from './routes/about'
import { Route as NotAuthenticatedImport } from './routes/_not-authenticated'
import { Route as ExampleImport } from './routes/_example'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as NotAuthenticatedLoginImport } from './routes/_not-authenticated/login'
import { Route as ExampleExampleImport } from './routes/_example/example'
import { Route as ExampleDashboard06Import } from './routes/_example/dashboard-06'
import { Route as ExampleDashboard05Import } from './routes/_example/dashboard-05'
import { Route as ExampleDashboard04Import } from './routes/_example/dashboard-04'
import { Route as ExampleDashboard03Import } from './routes/_example/dashboard-03'
import { Route as ExampleAuthenticate03Import } from './routes/_example/authenticate-03'
import { Route as ExampleAuthenticate02Import } from './routes/_example/authenticate-02'
import { Route as ExampleAuthenticate01Import } from './routes/_example/authenticate-01'
import { Route as AuthenticatedListingAddListingImport } from './routes/_authenticated/listing/add-listing'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ListingRoute = ListingImport.update({
  path: '/listing',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const NotAuthenticatedRoute = NotAuthenticatedImport.update({
  id: '/_not-authenticated',
  getParentRoute: () => rootRoute,
} as any)

const ExampleRoute = ExampleImport.update({
  id: '/_example',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const NotAuthenticatedLoginRoute = NotAuthenticatedLoginImport.update({
  path: '/login',
  getParentRoute: () => NotAuthenticatedRoute,
} as any)

const ExampleExampleRoute = ExampleExampleImport.update({
  path: '/example',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleDashboard06Route = ExampleDashboard06Import.update({
  path: '/dashboard-06',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleDashboard05Route = ExampleDashboard05Import.update({
  path: '/dashboard-05',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleDashboard04Route = ExampleDashboard04Import.update({
  path: '/dashboard-04',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleDashboard03Route = ExampleDashboard03Import.update({
  path: '/dashboard-03',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleAuthenticate03Route = ExampleAuthenticate03Import.update({
  path: '/authenticate-03',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleAuthenticate02Route = ExampleAuthenticate02Import.update({
  path: '/authenticate-02',
  getParentRoute: () => ExampleRoute,
} as any)

const ExampleAuthenticate01Route = ExampleAuthenticate01Import.update({
  path: '/authenticate-01',
  getParentRoute: () => ExampleRoute,
} as any)

const AuthenticatedListingAddListingRoute =
  AuthenticatedListingAddListingImport.update({
    path: '/listing/add-listing',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_example': {
      id: '/_example'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ExampleImport
      parentRoute: typeof rootRoute
    }
    '/_not-authenticated': {
      id: '/_not-authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotAuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/listing': {
      id: '/listing'
      path: '/listing'
      fullPath: '/listing'
      preLoaderRoute: typeof ListingImport
      parentRoute: typeof rootRoute
    }
    '/_example/authenticate-01': {
      id: '/_example/authenticate-01'
      path: '/authenticate-01'
      fullPath: '/authenticate-01'
      preLoaderRoute: typeof ExampleAuthenticate01Import
      parentRoute: typeof ExampleImport
    }
    '/_example/authenticate-02': {
      id: '/_example/authenticate-02'
      path: '/authenticate-02'
      fullPath: '/authenticate-02'
      preLoaderRoute: typeof ExampleAuthenticate02Import
      parentRoute: typeof ExampleImport
    }
    '/_example/authenticate-03': {
      id: '/_example/authenticate-03'
      path: '/authenticate-03'
      fullPath: '/authenticate-03'
      preLoaderRoute: typeof ExampleAuthenticate03Import
      parentRoute: typeof ExampleImport
    }
    '/_example/dashboard-03': {
      id: '/_example/dashboard-03'
      path: '/dashboard-03'
      fullPath: '/dashboard-03'
      preLoaderRoute: typeof ExampleDashboard03Import
      parentRoute: typeof ExampleImport
    }
    '/_example/dashboard-04': {
      id: '/_example/dashboard-04'
      path: '/dashboard-04'
      fullPath: '/dashboard-04'
      preLoaderRoute: typeof ExampleDashboard04Import
      parentRoute: typeof ExampleImport
    }
    '/_example/dashboard-05': {
      id: '/_example/dashboard-05'
      path: '/dashboard-05'
      fullPath: '/dashboard-05'
      preLoaderRoute: typeof ExampleDashboard05Import
      parentRoute: typeof ExampleImport
    }
    '/_example/dashboard-06': {
      id: '/_example/dashboard-06'
      path: '/dashboard-06'
      fullPath: '/dashboard-06'
      preLoaderRoute: typeof ExampleDashboard06Import
      parentRoute: typeof ExampleImport
    }
    '/_example/example': {
      id: '/_example/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleExampleImport
      parentRoute: typeof ExampleImport
    }
    '/_not-authenticated/login': {
      id: '/_not-authenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NotAuthenticatedLoginImport
      parentRoute: typeof NotAuthenticatedImport
    }
    '/_authenticated/listing/add-listing': {
      id: '/_authenticated/listing/add-listing'
      path: '/listing/add-listing'
      fullPath: '/listing/add-listing'
      preLoaderRoute: typeof AuthenticatedListingAddListingImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedListingAddListingRoute,
  }),
  ExampleRoute: ExampleRoute.addChildren({
    ExampleAuthenticate01Route,
    ExampleAuthenticate02Route,
    ExampleAuthenticate03Route,
    ExampleDashboard03Route,
    ExampleDashboard04Route,
    ExampleDashboard05Route,
    ExampleDashboard06Route,
    ExampleExampleRoute,
  }),
  NotAuthenticatedRoute: NotAuthenticatedRoute.addChildren({
    NotAuthenticatedLoginRoute,
  }),
  AboutRoute,
  ListingRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_example",
        "/_not-authenticated",
        "/about",
        "/listing"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/listing/add-listing"
      ]
    },
    "/_example": {
      "filePath": "_example.tsx",
      "children": [
        "/_example/authenticate-01",
        "/_example/authenticate-02",
        "/_example/authenticate-03",
        "/_example/dashboard-03",
        "/_example/dashboard-04",
        "/_example/dashboard-05",
        "/_example/dashboard-06",
        "/_example/example"
      ]
    },
    "/_not-authenticated": {
      "filePath": "_not-authenticated.tsx",
      "children": [
        "/_not-authenticated/login"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/listing": {
      "filePath": "listing.tsx"
    },
    "/_example/authenticate-01": {
      "filePath": "_example/authenticate-01.tsx",
      "parent": "/_example"
    },
    "/_example/authenticate-02": {
      "filePath": "_example/authenticate-02.tsx",
      "parent": "/_example"
    },
    "/_example/authenticate-03": {
      "filePath": "_example/authenticate-03.tsx",
      "parent": "/_example"
    },
    "/_example/dashboard-03": {
      "filePath": "_example/dashboard-03.tsx",
      "parent": "/_example"
    },
    "/_example/dashboard-04": {
      "filePath": "_example/dashboard-04.tsx",
      "parent": "/_example"
    },
    "/_example/dashboard-05": {
      "filePath": "_example/dashboard-05.tsx",
      "parent": "/_example"
    },
    "/_example/dashboard-06": {
      "filePath": "_example/dashboard-06.tsx",
      "parent": "/_example"
    },
    "/_example/example": {
      "filePath": "_example/example.tsx",
      "parent": "/_example"
    },
    "/_not-authenticated/login": {
      "filePath": "_not-authenticated/login.tsx",
      "parent": "/_not-authenticated"
    },
    "/_authenticated/listing/add-listing": {
      "filePath": "_authenticated/listing/add-listing.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
